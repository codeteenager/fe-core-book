import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.9509352d.js";const p="/fe-core-book/images/99.png",o="/fe-core-book/images/100.png",e="/fe-core-book/images/101.png",c="/fe-core-book/images/102.png",r="/fe-core-book/images/103.png",t="/fe-core-book/images/104.png",C=JSON.parse('{"title":"性能监控和错误收集与上报（上）","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/31.md","filePath":"guide/31.md","lastUpdated":1699938306000}'),E={name:"guide/31.md"},y=l('<h1 id="性能监控和错误收集与上报-上" tabindex="-1">性能监控和错误收集与上报（上） <a class="header-anchor" href="#性能监控和错误收集与上报-上" aria-label="Permalink to &quot;性能监控和错误收集与上报（上）&quot;">​</a></h1><p>性能始终是前端领域非常重要的话题，它直接决定了产品体验的优劣，重要性无需赘言。我们在体验一个产品时，能够直观感受到其性能，可是如何量化衡量性能的好坏呢？</p><p>同时，我们无法保证程序永远不出问题，如何在程序出现问题时及时获得现场数据、还原现场，以做出准确地响应呢？ 离开了实际场景谈这些话题都是“耍流氓”，性能数据的监控、错误信息的收集和上报应该都要基于线上真实环境。这对于我们随时掌控线上产品，优化应用体验具有重大意义。</p><p>本节课程，我们就聚焦在性能监控和错误收集与上报系统上。希望通过学习，每个人都心中有数，做到不仅能够分析性能数据、处理错误，还能建设一个成熟的配套系统。</p><p>本节课主要知识点：</p><p><img src="'+p+'" alt=""></p><p>接下来，我们通过 2 节内容来学习这个主题。</p><h2 id="性能监控指标" tabindex="-1">性能监控指标 <a class="header-anchor" href="#性能监控指标" aria-label="Permalink to &quot;性能监控指标&quot;">​</a></h2><p>既然是性能监控，那我们首先需要明确衡量指标。一般来说，业界认可的常用指标有：</p><ul><li>首次绘制（FP）和首次有内容绘制（FCP）时间</li><li>首次有意义绘制（FMP）时间</li><li>首屏时间</li><li>用户可交互（TTI）时间</li><li>总下载时间</li><li>自定义指标</li></ul><p>接下来分别看看每个指标的含义。</p><blockquote><p>首次绘制（FP）时间 ：对于应用页面，用户在视觉上首次出现不同于跳转之前的内容时间点，或者说是页面发生第一次绘制的时间点。 首次有内容绘制（FCP）时间 ：指浏览器完成渲染 DOM 中第一个内容的时间点，可能是文本、图像或者其他任何元素，此时用户应该在视觉上有直观的感受。 首次有意义绘制（FMP）时间 ：指页面关键元素渲染时间。这个概念并没有标准化定义，因为关键元素可以由开发者自行定义——究竟什么是“有意义”的内容，只有开发者或者产品经理自己了解。 首屏时间 ：对于所有网页应用，这是一个非常重要的指标。用大白话来说，就是进入页面之后，应用渲染完整个手机屏幕（未滚动之前）内容的时间。需要注意的是，业界对于这个指标其实同样并没有确切的定论，比如这个时间是否包含手机屏幕内图片的渲染完成时间。 用户可交互时间 ：顾名思义，也就是用户可以与应用进行交互的时间。一般来讲，我们认为是 domready 的时间，因为我们通常会在这时候绑定事件操作。如果页面中涉及交互的脚本没有下载完成，那么当然没有到达所谓的用户可交互时间。那么如何定义 domready 时间呢？我推荐参考司徒正美的文章：<a href="https://www.cnblogs.com/rubylouvre/p/4536334.html" target="_blank" rel="noreferrer">何谓 domReady</a>。</p></blockquote><p>以上时间，我们可以通过下图对比认识：</p><p><img src="'+o+'" alt=""></p><p>这是我访问 Medium 移动网站分析得到的时序图，读者可根据网页加载的不同时段，体会各个时间节点的变化。更完整的信息由 Chrome DevTool 给出：</p><p><img src="'+e+'" alt=""></p><p>通过 Google Lighthouse 分析得到</p><p><img src="'+c+'" alt=""></p><p>请注意 First Meaningful Paint 和 First Contentful Paint 以及 Time to Interactive（可交互时间）被收录其中。</p><p>这里我们先对这些时间节点以及数据有一个感性的认知，后面将会逐步学习如何统计这些时间，做出如上图一样的分析系统。接下来，我们继续学习一些概念。</p><blockquote><p>总下载时间 ：页面所有资源加载完成所需要的时间。一般可以统计 window.onload 时间，这样可以统计出同步加载的资源全部加载完的耗时。如果页面中存在较多异步渲染，也可以将异步渲染全部完成的时间作为总下载时间。</p></blockquote><blockquote><p>自定义指标 ：由于应用特点不同，我们可以根据需求自定义时间。比如，一个类似 Instagram 的页面，页面由图片瀑布流组成，那么我们可能非常关心屏幕中第一排图片渲染完成的时间。</p></blockquote><p>这里我们提一下，DOMContentLoaded 与 load 事件的区别 。其实从这两个事件的命名我们就能体会，DOMContentLoaded 指的是文档中 DOM 内容加载完毕的时间，也就是说 HTML 结构已经完整。但是我们知道，很多页面包含图片、特殊字体、视频、音频等其他资源，这些资源由网络请求获取，DOM 内容加载完毕时，由于这些资源往往需要额外的网络请求，还没有请求或者渲染完成。而当页面上所有资源加载完成后，load 事件才会被触发。因此，在时间线上，load 事件往往会落后于 DOMContentLoaded 事件。</p><p>如图：</p><p><img src="'+r+`" alt=""></p><p>表示页面加载一共请求了 13 个资源，大小为 309 KB，DOMContentLoaded 时间为 2.82 s，load 时间为 2.95 s，页面完全稳定时间 5.38 s 。</p><h2 id="fmp-的智能获取算法" tabindex="-1">FMP 的智能获取算法 <a class="header-anchor" href="#fmp-的智能获取算法" aria-label="Permalink to &quot;FMP 的智能获取算法&quot;">​</a></h2><p>另外结合自定义指标和首次有意义绘制（FMP）时间，稍做延伸：我们知道首次有意义绘制比较主观，开发者可以自行指定究竟哪些属于有意义的渲染元素。我们也可以通过 FMP 的智能获取算法 来完成自定义 FMP 时间。该算法实现过程如下。</p><p>首先 ，获取有意义的渲染元素，一般认为：</p><ul><li>体积占比比较大</li><li>屏幕内可见占比大</li><li>属于资源加载元素（img、svg、video、object、embed、canvas）</li><li>主要元素是多个组成的</li></ul><p>具备这几个条件的元素，更像是有意义的元素。根据元素对页面视觉的贡献，我们对元素特点的权重进行划分：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">weightMap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    SVG: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    IMG: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    CANVAS: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    OBJECT: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    EMBED: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VIDEO: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    OTHER: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">weightMap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    SVG: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    IMG: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    CANVAS: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    OBJECT: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    EMBED: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    VIDEO: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    OTHER: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>接着 ，我们对整个页面进行深度优先遍历搜索，之后对每一个元素进行分数计算，具体通过 element.getBoundingClientRect 获取元素的位置和大小，然后通过计算「width height weight * 元素在 viewport 的面积占比」的乘积，确定元素的最终得分。接着将该元素的子元素得分之和与其得分进行比较，取较大值，记录得分元素集。这个集合是“可视区域内得分最高的元素的集合”，我们会对这个集合的得分取均值，然后过滤出在平均分之上的元素集合，进行时间计算。这就得到了一个智能的 FMP 时间。</p><p>最终 ，代码由 qbright 实现：<a href="https://github.com/qbright/fmp-%20timing" target="_blank" rel="noreferrer">fmp-timing</a>，感兴趣的读者可以自行了解细节。</p><h2 id="性能数据获取" tabindex="-1">性能数据获取 <a class="header-anchor" href="#性能数据获取" aria-label="Permalink to &quot;性能数据获取&quot;">​</a></h2><p>了解了上述性能指标，我们来分析一下这些性能指标数据究竟该如何计算获取。</p><h3 id="window-performance-强大但有缺点" tabindex="-1">window.performance：强大但有缺点 <a class="header-anchor" href="#window-performance-强大但有缺点" aria-label="Permalink to &quot;window.performance：强大但有缺点&quot;">​</a></h3><p>目前最为流行和靠谱的方案是采用 Performance API，它非常强大：不仅包含了页面性能的相关数据，还带有页面资源加载和异步请求的相关数据。</p><p>调用 window.performance.timing 会返回一个对象，这个对象包含各种页面加载和渲染的时间节点。如图：</p><p><img src="`+t+`" alt=""></p><p>具体解析：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">window</span><span style="color:#E1E4E8;">.performance </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">    memory: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        usedJSHeapSize,</span></span>
<span class="line"><span style="color:#E1E4E8;">        totalJSHeapSize,</span></span>
<span class="line"><span style="color:#E1E4E8;">        jsHeapSizeLimit</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    navigation: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 页面重定向跳转到当前页面的次数</span></span>
<span class="line"><span style="color:#E1E4E8;">        redirectCount,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 以哪种方式进入页面</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 0 正常跳转进入</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 1 window.location.reload() 重新刷新</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 2 通过浏览器历史记录，以及前进后退进入</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 255 其他方式进入</span></span>
<span class="line"><span style="color:#E1E4E8;">        type,         </span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    timing: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 等于前一个页面 unload 时间，如果没有前一个页面，则等于 fetchStart 时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        navigationStart</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 前一个页面 unload 时间，如果没有前一个页面或者前一个页面与当前页面不同域，则值为 0</span></span>
<span class="line"><span style="color:#E1E4E8;">        unloadEventStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 前一个页面 unload 事件绑定的回调函数执行完毕的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        unloadEventEnd,</span></span>
<span class="line"><span style="color:#E1E4E8;">        redirectStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        redirectEnd,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 检查缓存前，准备请求第一个资源的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        fetchStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 域名查询开始的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        domainLookupStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 域名查询结束的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        domainLookupEnd,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// HTTP（TCP） 开始建立连接的时间            connectStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// HTTP（TCP）建立连接结束的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectEnd,</span></span>
<span class="line"><span style="color:#E1E4E8;">        secureConnectionStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 连接建立完成后，请求文档开始的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        requestStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 连接建立完成后，文档开始返回并收到内容的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        responseStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 最后一个字节返回并收到内容的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        responseEnd,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Document.readyState 值为 loading 的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        domLoading,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Document.readyState 值为 interactive</span></span>
<span class="line"><span style="color:#E1E4E8;">        domInteractive,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// DOMContentLoaded 事件开始时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        domContentLoadedEventStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// DOMContentLoaded 事件结束时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        domContentLoadedEventEnd,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Document.readyState 值为 complete 的时间            domComplete,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// load 事件开始的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        loadEventStart,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// load 事件结束的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        loadEventEnd</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">window</span><span style="color:#24292E;">.performance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">    memory: {</span></span>
<span class="line"><span style="color:#24292E;">        usedJSHeapSize,</span></span>
<span class="line"><span style="color:#24292E;">        totalJSHeapSize,</span></span>
<span class="line"><span style="color:#24292E;">        jsHeapSizeLimit</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    navigation: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 页面重定向跳转到当前页面的次数</span></span>
<span class="line"><span style="color:#24292E;">        redirectCount,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 以哪种方式进入页面</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 0 正常跳转进入</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1 window.location.reload() 重新刷新</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2 通过浏览器历史记录，以及前进后退进入</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 255 其他方式进入</span></span>
<span class="line"><span style="color:#24292E;">        type,         </span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    timing: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 等于前一个页面 unload 时间，如果没有前一个页面，则等于 fetchStart 时间</span></span>
<span class="line"><span style="color:#24292E;">        navigationStart</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 前一个页面 unload 时间，如果没有前一个页面或者前一个页面与当前页面不同域，则值为 0</span></span>
<span class="line"><span style="color:#24292E;">        unloadEventStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 前一个页面 unload 事件绑定的回调函数执行完毕的时间</span></span>
<span class="line"><span style="color:#24292E;">        unloadEventEnd,</span></span>
<span class="line"><span style="color:#24292E;">        redirectStart,</span></span>
<span class="line"><span style="color:#24292E;">        redirectEnd,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 检查缓存前，准备请求第一个资源的时间</span></span>
<span class="line"><span style="color:#24292E;">        fetchStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 域名查询开始的时间</span></span>
<span class="line"><span style="color:#24292E;">        domainLookupStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 域名查询结束的时间</span></span>
<span class="line"><span style="color:#24292E;">        domainLookupEnd,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// HTTP（TCP） 开始建立连接的时间            connectStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// HTTP（TCP）建立连接结束的时间</span></span>
<span class="line"><span style="color:#24292E;">        connectEnd,</span></span>
<span class="line"><span style="color:#24292E;">        secureConnectionStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 连接建立完成后，请求文档开始的时间</span></span>
<span class="line"><span style="color:#24292E;">        requestStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 连接建立完成后，文档开始返回并收到内容的时间</span></span>
<span class="line"><span style="color:#24292E;">        responseStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 最后一个字节返回并收到内容的时间</span></span>
<span class="line"><span style="color:#24292E;">        responseEnd,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Document.readyState 值为 loading 的时间</span></span>
<span class="line"><span style="color:#24292E;">        domLoading,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Document.readyState 值为 interactive</span></span>
<span class="line"><span style="color:#24292E;">        domInteractive,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// DOMContentLoaded 事件开始时间</span></span>
<span class="line"><span style="color:#24292E;">        domContentLoadedEventStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// DOMContentLoaded 事件结束时间</span></span>
<span class="line"><span style="color:#24292E;">        domContentLoadedEventEnd,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Document.readyState 值为 complete 的时间            domComplete,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// load 事件开始的时间</span></span>
<span class="line"><span style="color:#24292E;">        loadEventStart,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// load 事件结束的时间</span></span>
<span class="line"><span style="color:#24292E;">        loadEventEnd</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><p>根据这些时间节点，我们选择相应的时间两两做差，便可以计算出一些典型指标：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">calcTime</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> times </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> t </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> window.performance.timing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 重定向时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.redirectTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.redirectEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.redirectStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// DNS 查询耗时</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.dnsTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.domainLookupEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.domainLookupStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// TCP 建立连接完成握手的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    connect </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.connectEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.connectStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// TTFB 读取页面第一个字节的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.ttfbTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.responseStart </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.navigationStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// DNS 缓存时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.appcacheTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.domainLookupStart </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.fetchStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 卸载页面的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.unloadTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.unloadEventEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.unloadEventStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// TCP 连接耗时</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.tcpTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.connectEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.connectStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// request 请求耗时</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.reqTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.responseEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.responseStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 解析 DOM 树耗时</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.analysisTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.domComplete </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.domInteractive</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 白屏时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.blankTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.domLoading </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.fetchStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// domReadyTime 即用户可交互时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.domReadyTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.domContentLoadedEventEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.fetchStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 用户等待页面完全可用的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.loadPage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t.loadEventEnd </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> t.navigationStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> times</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">calcTime</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> times </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> t </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window.performance.timing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 重定向时间</span></span>
<span class="line"><span style="color:#24292E;">    times.redirectTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.redirectEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.redirectStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// DNS 查询耗时</span></span>
<span class="line"><span style="color:#24292E;">    times.dnsTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.domainLookupEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.domainLookupStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// TCP 建立连接完成握手的时间</span></span>
<span class="line"><span style="color:#24292E;">    connect </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.connectEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.connectStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// TTFB 读取页面第一个字节的时间</span></span>
<span class="line"><span style="color:#24292E;">    times.ttfbTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.responseStart </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.navigationStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// DNS 缓存时间</span></span>
<span class="line"><span style="color:#24292E;">    times.appcacheTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.domainLookupStart </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.fetchStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 卸载页面的时间</span></span>
<span class="line"><span style="color:#24292E;">    times.unloadTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.unloadEventEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.unloadEventStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// TCP 连接耗时</span></span>
<span class="line"><span style="color:#24292E;">    times.tcpTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.connectEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.connectStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// request 请求耗时</span></span>
<span class="line"><span style="color:#24292E;">    times.reqTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.responseEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.responseStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 解析 DOM 树耗时</span></span>
<span class="line"><span style="color:#24292E;">    times.analysisTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.domComplete </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.domInteractive</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 白屏时间</span></span>
<span class="line"><span style="color:#24292E;">    times.blankTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.domLoading </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.fetchStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// domReadyTime 即用户可交互时间</span></span>
<span class="line"><span style="color:#24292E;">    times.domReadyTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.domContentLoadedEventEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.fetchStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 用户等待页面完全可用的时间</span></span>
<span class="line"><span style="color:#24292E;">    times.loadPage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t.loadEventEnd </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> t.navigationStart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> times</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>这个 API 非常强大，但是并不适用所有场景 。比如：使用 window.performance.timing 所获的数据，在单页应用中改变 URL 但不刷新页面的情况下（单页应用典型路由方案），是不会更新的，还需要开发者重新设计统计方案。同时，可能无法满足一些自定义的数据。下面我们来分析一下部分无法直接获取的性能指标的计算方法。</p><h3 id="自定义时间计算" tabindex="-1">自定义时间计算 <a class="header-anchor" href="#自定义时间计算" aria-label="Permalink to &quot;自定义时间计算&quot;">​</a></h3><p>首屏时间的计算实现方式不尽相同，开发者可以根据自己的需求来确定首屏时间的计算方式。我列举几个典型的方案。</p><p>对于 网页高度小于屏幕 的网站来说，统计首屏时间非常简单，只要在页面底部加上脚本，完成当前时间的打印即可，这个时间再通过与 window.performance.timing.navigationStart 时间做差，即得到首屏渲染耗时。</p><p>但网页高度小于屏幕的站点毕竟是少数：对于 网页高度大于一屏 的页面来说，只要在估算接近于一屏幕的最后一个元素的位置后，插入计算脚本即可：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> time </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> window.performance.timing.navigationStart</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> window.performance.timing.navigationStart</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>显然上述方案是比较理想化的，我们很难通过自动化工具或者一段集中管理的代码进行统计。开发者直接在页面 DOM 中插入时间统计，不仅代码侵入性太强，而且成本很高。同时，这样的计算方式其实并没有考虑首屏图片加载的情况，也就是说首屏图片未加载完的情况下，我们也认为加载已经完成。如果要考虑首屏图片的加载，建议使用 集中化脚本统计首屏时间 的方法：使用定时器不断检测 img 节点，判断图片是否在首屏且加载完成，找到首屏加载最慢的图片加载完成的时间，从而计算出首屏时间。如果首屏有没有图片，就用 domready 时间：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">win</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> window</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">firstScreenHeight</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> win.screen.height</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> firstScreenImgs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> isFindLastImg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> allImgLoaded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> collect </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setInterval</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i, img</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isFindLastImg) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (firstScreenImgs.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> firstScreenImgs.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> firstScreenImgs[i]</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">img.complete) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    allImgLoaded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">break</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    allImgLoaded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            allImgLoaded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (allImgLoaded) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            collect.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">                firstScreenLoaded: startTime </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">clearInterval</span><span style="color:#E1E4E8;">(t)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> imgs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> body.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> imgs.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> imgs[i]</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> imgOffsetTop </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getOffsetTop</span><span style="color:#E1E4E8;">(img)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (imgOffsetTop </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> firstScreenHeight) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                isFindLastImg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">break</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (imgOffsetTop </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> firstScreenHeight </span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">img.hasPushed) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                img.hasPushed </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">                firstScreenImgs.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(img)</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">doc</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document</span></span>
<span class="line"><span style="color:#E1E4E8;">doc.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;DOMContentLoaded&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">imgs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> body.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">imgs.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        isFindLastImg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">win.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;load&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    allImgLoaded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    isFindLastImg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (t) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">clearInterval</span><span style="color:#E1E4E8;">(t)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">win</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">firstScreenHeight</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> win.screen.height</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> firstScreenImgs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> isFindLastImg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> allImgLoaded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> collect </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">t</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setInterval</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i, img</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isFindLastImg) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (firstScreenImgs.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> firstScreenImgs.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> firstScreenImgs[i]</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">img.complete) {</span></span>
<span class="line"><span style="color:#24292E;">                    allImgLoaded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    allImgLoaded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            allImgLoaded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (allImgLoaded) {</span></span>
<span class="line"><span style="color:#24292E;">            collect.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                firstScreenLoaded: startTime </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> Date.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">clearInterval</span><span style="color:#24292E;">(t)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> imgs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> body.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> imgs.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> imgs[i]</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> imgOffsetTop </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getOffsetTop</span><span style="color:#24292E;">(img)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (imgOffsetTop </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> firstScreenHeight) {</span></span>
<span class="line"><span style="color:#24292E;">                isFindLastImg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (imgOffsetTop </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> firstScreenHeight </span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">img.hasPushed) {</span></span>
<span class="line"><span style="color:#24292E;">                img.hasPushed </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">                firstScreenImgs.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(img)</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">doc</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document</span></span>
<span class="line"><span style="color:#24292E;">doc.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;DOMContentLoaded&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">imgs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> body.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">imgs.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        isFindLastImg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">win.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;load&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    allImgLoaded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    isFindLastImg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (t) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">clearInterval</span><span style="color:#24292E;">(t)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>另外一种方式是不使用定时器，且默认影响首屏时间的主要因素是图片的加载，如果没有图片，纯粹渲染文字是很快的，因此，可以通过统计首屏内图片的加载时间获取首屏渲染完成的时间。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">logFirstScreen</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> images </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementsByTagName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> iLen </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> images.</span><span style="color:#79B8FF;">length</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> curMax </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> inScreenLen </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 图片的加载回调</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">imageBack</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.removeEventListener</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">removeEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;load&#39;</span><span style="color:#E1E4E8;">, imageBack, </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">curMax </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> inScreenLen) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 所有在首屏的图片均已加载完成的话，发送日志</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        }   </span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 对于所有的位于指定区域的图片，绑定回调事件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; s </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> iLen; s</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> images[s]</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> offset </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            top: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> curImg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> img</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (curImg.offsetParent) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            offset.top </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> curImg.offsetTop</span></span>
<span class="line"><span style="color:#E1E4E8;">            curImg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> curImg.offsetParent</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 判断图片在不在首屏</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (document.documentElement.clientHeight </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> offset.top) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">continue</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 图片还没有加载完成的话</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">img.complete) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            inScreenLen</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">            img.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;load&#39;</span><span style="color:#E1E4E8;">, imageBack, </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 如果首屏没有图片的话，直接发送日志</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (inScreenLen </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 发送日志进行统计</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">        window.logInfo.firstScreen </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> window.performance.timing.navigationStart</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;首屏时间：&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">+new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> window.performance.timing.navigationStart)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">})()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">logFirstScreen</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> images </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementsByTagName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> iLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> images.</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> curMax </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> inScreenLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 图片的加载回调</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">imageBack</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.removeEventListener</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">removeEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;load&#39;</span><span style="color:#24292E;">, imageBack, </span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">curMax </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> inScreenLen) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 所有在首屏的图片均已加载完成的话，发送日志</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        }   </span></span>
<span class="line"><span style="color:#24292E;">    } </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 对于所有的位于指定区域的图片，绑定回调事件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; s </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> iLen; s</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> images[s]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> offset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            top: </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> curImg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> img</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (curImg.offsetParent) {</span></span>
<span class="line"><span style="color:#24292E;">            offset.top </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> curImg.offsetTop</span></span>
<span class="line"><span style="color:#24292E;">            curImg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> curImg.offsetParent</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 判断图片在不在首屏</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (document.documentElement.clientHeight </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> offset.top) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">continue</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 图片还没有加载完成的话</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">img.complete) {</span></span>
<span class="line"><span style="color:#24292E;">            inScreenLen</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">            img.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;load&#39;</span><span style="color:#24292E;">, imageBack, </span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 如果首屏没有图片的话，直接发送日志</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (inScreenLen </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 发送日志进行统计</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">        window.logInfo.firstScreen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> window.performance.timing.navigationStart</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;首屏时间：&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">+new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> window.performance.timing.navigationStart)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">})()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>可见，除了使用教科书般强大的 Performance API 外，我们也完全拥有自主权来统计各种页面性能数据。这就需要开发者根据具体场景和业务需求，结合社区已有方案，找到完全适合自己的统计采集方式。</p><p>这节课我们介绍了性能核心指标以及获取方式，关键在于合理利用强大的 API。与此同时，对于“开放性”数据，我们需要结合实际，灵活进行开发。</p>`,56),i=[y];function m(b,d,u,F,D,g){return n(),a("div",null,i)}const f=s(E,[["render",m]]);export{C as __pageData,f as default};
